/* Calculadora HOC2 */
package HOC2;
import java_cup.runtime.*;
import java.io.FileReader;

class AnalizadorSintactico;

parser code{:

    VentanaHoc2 ventana = new VentanaHoc2();
    Float variables[] = new Float[26];

    public void report_error(String mensaje, Object info){
        StringBuilder m = new StringBuilder("Error");
        if(info instanceof java_cup.runtime.Symbol){
            java_cup.runtime.Symbol s = (java_cup.runtime.Symbol) info;
            if(s.left >= 0){
                m.append("En la linea "+(s.left+1));
                if(s.right >= 0)
                    m.append(", columna " + (s.right+1));
            }
        }
        m.append(" : "+mensaje);
        System.err.println(m);
    }

    public void report_fatal_error(String message, Object info){
        report_error(message, info);
        System.exit(1);
    }


:}

terminal opSuma, opResta, opProd, opDiv, Asig;
terminal ParIzq, ParDer, Enter;
terminal Float NUM;
terminal Integer VAR;
terminal UMINUS;

non terminal list;
non terminal Float asgn, expr;

/* Precedences */
precedence right Asig;
precedence left opSuma, opResta;
precedence left opProd, opDiv;
precedence left UMINUS;

list    ::=
        | Enter
        | list expr:e Enter   {:ventana.PonerTextSintac(Float.toString(e)+ "\n");:}
        ;
asgn    ::= VAR: indVar Asig expr:valExpr {:variables[indVar] = valExpr;RESULT=valExpr; :}
        ;

expr    ::= NUM : valNum {:RESULT = valNum; :}
        | VAR: indVar   {:RESULT = variables[indVar];:}
        | asgn: valAsgn {:RESULT = valAsgn; :}
        | expr:e1 opSuma expr:e2 {:RESULT = e1+e2;:}
        | expr:e1 opResta expr:e2 {:RESULT = e1-e2;:}
        | expr:e1 opProd expr:e2 {:RESULT = e1*e2;:} 
        | expr:e1 opDiv expr:e2 {:RESULT = e1/e2;:}
        | ParIzq expr:e ParDer {:RESULT = e; :}
        | opResta expr:e {:RESULT = -e; :} %prec UMINUS
        ;